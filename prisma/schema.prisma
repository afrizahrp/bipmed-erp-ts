generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Company {
  id                  String        @id @db.Char(5)
  name                String?       @db.VarChar(150)
  address             String?       @db.VarChar(250)
  post_cd             String?       @db.VarChar(10)
  tel_no              String?       @db.VarChar(50)
  fax_no              String?       @db.VarChar(50)
  email               String?       @db.VarChar(50)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.VarChar(50)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.VarChar(50)
  updatedAt           DateTime?     @db.DateTime
  branches            Branch[]
  @@index([name])
}

model Branch {
  id                  String        @id @db.Char(10)
  company_id          String        @db.Char(5)
  name                String?       @db.VarChar(150)
  address             String?       @db.VarChar(250)
  post_cd             String?       @db.VarChar(10)
  tel_no              String?       @db.VarChar(50)
  fax_no              String?       @db.VarChar(50)
  email               String?       @db.VarChar(50)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.VarChar(50)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.VarChar(50)
  updatedAt           DateTime?     @db.DateTime
  company             Company       @relation(fields: [company_id], references: [id])  
  }




model User {
  id                  String        @id @default(cuid())
  name                String        @unique
  authorized          Boolean       @default(false)
  role                String?       @default("client")
  password            String        @db.VarChar(250)
  hasehdPassword      String?       @db.VarChar(250)
  accessToken         String?       @db.VarChar(250)
  refreshToken        String?       @db.VarChar(250)
  email               String?       @db.VarChar(50)
  emailVerified       DateTime?
  isLoggedIn          Boolean?      @default(false)
  avatar              String?       @db.VarChar(150)
  image               String?       @db.VarChar(150)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
}

model MasterTableStatus {
  id                  Boolean       @id @default(false)
  name                String?       @db.VarChar(50)
  remarks             String?       @db.VarChar(150)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  Categories          Categories[]
  SubCategories       SubCategories[]
  Products            Products[]
  Suppliers           Suppliers[]
}

model TrxTableStatus {
  id                  Int           @id @db.TinyInt
  name                String?       @db.VarChar(50)
  remarks             String?       @db.VarChar(150)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  poHeader            PoHeader[]
}

model TermOfPay {
  id                  String        @id @default(cuid())
  name                String?       @db.VarChar(150)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
}

model Currency {
  id                  String        @id @db.Char(3)
  name                String?       @db.VarChar(150)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  currencyRates       CurrencyRate[]
  ProductPrice        ProductPrice[]
  ProductUnitPriceHistory ProductUnitPriceHistory[]
  ProductSellingPriceHistory ProductSellingPriceHistory[]
}

model CurrencyRate {
  id                  String        @id @default(cuid())
  kursDate            DateTime?     @db.Date
  currencyId          String        @db.Char(3)
  rate                Float         @default(1)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  currency            Currency      @relation(fields: [currencyId], references: [id])
}

model SysCounter {
  module_id           String        @db.Char(3)
  id                  String        @db.Char(3)
  lastCounter         Int
  description         String        @db.VarChar(160)
  pattern             String        @db.Char(30)
  combiner            String        @db.Char(20)
  refreshAt           String        @db.Char(1)
  firstChar           String        @db.Char(4)
  secondChar          String        @db.Char(4)
  digits              Int
  startYear           String        @db.Char(4)
  startMonth          String        @db.Char(2)
  startCount          Int
  recounter           Int
  autoGenerate        Boolean       @default(false)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)

  @@id([module_id, id, startYear, startMonth, company_id, branch_id])
}

model ProductCounter {
  id                  String        @db.Char(5)
  description         String        @db.VarChar(160) 
  digits              Int
  lastCounter         Int
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  @@id([ id,  company_id, branch_id])
}


model MaterialCounter {
  id                  String        @db.Char(5)
  description         String        @db.VarChar(160) 
  digits              Int
  lastCounter         Int
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  @@id([ id,  company_id, branch_id])
}


model CategoryCounter {
  id                  String        @db.Char(5)
  description         String        @db.VarChar(160) 
  digits              Int
  lastCounter         Int
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  @@id([ id,  company_id, branch_id])
}

model SubCategoryCounter {
  id                  String        @db.Char(5)
  description         String        @db.VarChar(160) 
  digits              Int
  lastCounter         Int
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  @@id([ id,  company_id, branch_id])
}

model UomCounter {
  id                  String        @db.Char(5)
  description         String        @db.VarChar(160) 
  digits              Int
  lastCounter         Int
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  @@id([ id,  company_id, branch_id])
}


model BrandCounter {
  id                    String        @db.Char(5)
  description           String        @db.VarChar(160) 
  digits                Int
  lastCounter           Int
  createdBy             String?       @db.Char(10)
  createdAt             DateTime?     @db.DateTime @default(now())
  updatedBy             String?       @db.Char(10)
  updatedAt             DateTime?     @db.DateTime
  company_id            String        @db.Char(5)
  branch_id             String      @db.Char(10)
  @@id([ id,  company_id, branch_id])
}


model Uoms {
  id                  String        @id @db.Char(10)
  name                String?       @db.VarChar(150)
  iStatus             Boolean       @default(false)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  categoryType        CategoryTypes[]
  poDetail            PoDetail[]
  products            Products[]
}

model CategoryTypes {
  id                  String        @id @db.Char(1)
  name                String?       @db.VarChar(20)
  iStatus             Boolean       @default(false)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  categories          Categories[]
  uoms                Uoms[]

}

model Categories {
  type                String        @db.Char(1)
  id                  String        @id @db.Char(10)
  name                String?       @db.VarChar(50)
  slug                String?       @db.VarChar(50)
  iStatus             Boolean       @default(false)
  remarks             String?       @db.VarChar(250)
  iShowedStatus       Boolean?      @default(true)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  href                String?       @db.VarChar(150)
  icon                String?       @db.VarChar(50)
  status              MasterTableStatus @relation(fields: [iStatus], references: [id])
  categoryType        CategoryTypes     @relation(fields: [type], references: [id], onUpdate: NoAction)
  products            Products[]
  subCategories       SubCategories[]
  images              CategoryImages[]
  }


model CategoryImages {
  id                  Int           @id @default(autoincrement())
  category_id         String        @db.Char(10)
  imageURL            String        @db.VarChar(250)
  isPrimary           Boolean?      @default(false)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  categories            Categories      @relation(fields: [category_id], references: [id])
  @@index([category_id])
}

model SubCategories {
  type                String            @db.Char(1)
  id                  String            @id @db.Char(10)
  category_id         String            @db.Char(10)
  name                String?           @db.VarChar(150)
  iStatus             Boolean           @default(false)
  remarks             String?           @db.VarChar(250)
  createdBy           String?           @db.Char(10)
  createdAt           DateTime?         @db.DateTime @default(now())
  updatedBy           String?           @db.Char(10)
  updatedAt           DateTime?         @db.DateTime
  company_id          String            @db.Char(5)
  branch_id           String            @db.Char(10)
  status              MasterTableStatus @relation(fields: [iStatus], references: [id], onUpdate: NoAction)
  products            Products[]
  category            Categories        @relation(fields: [category_id], references: [id])
}

model Brands {
  type                Boolean       @default(false)
  id                  String        @id @db.Char(10)
  name                String?       @db.VarChar(50)
  iStatus             Boolean       @default(false)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products[]
}

model Warehouse {
  id                  String        @id @db.Char(10)
  name                String?       @db.VarChar(50)
  address             String?       @db.VarChar(250)
  isPrimary           Boolean       @default(false)
  iStatus             Boolean       @default(false)
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  productStock        ProductStock[]
}

model Products {
  id                  String        @id @db.Char(20)
  catalog_id          String       @db.VarChar(20)
  registered_id       String       @db.VarChar(20)
  name                String       @db.VarChar(250)
  category_id         String       @db.Char(10)
  subCategory_id      String?       @db.Char(10)
  uom_id              String?       @db.Char(10) @default("UNIT")
  brand_id            String?       @db.Char(10)@default("1457")
  tkdn_pctg           Float        @default(0)
  bmp_pctg            Float        @default(0)
  ecatalog_URL        String       @db.VarChar(250)
  iStatus             Boolean       @default(false)
  remarks             String       @db.Text
  slug                String       @db.VarChar(250)
  isMaterial          Boolean       @default(false)
  iShowedStatus       Boolean?      @default(true)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  images              ProductImages[]
  brand               Brands?            @relation(fields: [brand_id], references: [id])
  category            Categories?        @relation(fields: [category_id], references: [id], onUpdate: NoAction)
  status              MasterTableStatus  @relation(fields: [iStatus], references: [id], onUpdate: NoAction)
  subCategory         SubCategories?     @relation(fields: [subCategory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  uom                 Uoms?              @relation(fields: [uom_id], references: [id])
  specs               ProductSpecs?
  stock               ProductStock[]
  price               ProductPrice[]
  unitPriceHistory    ProductUnitPriceHistory[]
  sellingPriceHistory ProductSellingPriceHistory[]
   
   @@index([name])

}


model ProductStock {
  storage_id          String        @db.Char(10)
  id                  Int           @id @default(autoincrement())
  product_id          String        @db.Char(20)
  qty                 Decimal?      @default(0) @db.Decimal(18, 2)
  avgDailyUsage       Decimal?      @default(0) @db.Decimal(18, 2)
  leadTime            Int?          @default(0) @db.TinyInt
  safetyFactor        Decimal?      @default(0) @db.Decimal(18, 2)
  stdDeviation        Decimal?      @default(0) @db.Decimal(18, 2)
  bufferQty           Decimal?      @default(0) @db.Decimal(18, 2)
  minQty              Decimal?      @default(0) @db.Decimal(18, 2) // (lead time * avg daily usage)+safety factor*std deviation
  maxQty              Decimal?      @default(0) @db.Decimal(18, 2)// (lead time) * (avg daily usage + review period) + buffer qty
  inQty               Decimal?      @default(0) @db.Decimal(18, 2)
  outQty              Decimal?      @default(0) @db.Decimal(18, 2)
  reorderQty          Decimal?      @default(0) @db.Decimal(18, 2)
  remarks             String?       @db.Text
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  storage             Warehouse     @relation(fields: [storage_id], references: [id])
  products            Products      @relation(fields: [product_id], references: [id])
  @@index([product_id])

}

model ProductPrice {
  id                  Int           @id @default(autoincrement())
  product_id          String        @db.Char(20)
  sellingPrice        Decimal?      @default(0) @db.Decimal(18, 2)
  autoPrice           Boolean?      @default(false)
  lastInvoice_id      String        @db.Char(20)  // automatic get selling price from last invoice
  discount            Decimal?      @default(0) @db.Decimal(5, 2)
  discountAmt         Decimal?      @default(0) @db.Decimal(18, 2)
  unitPrice           Decimal?      @default(0) @db.Decimal(18, 2)
  lastPo_id           String        @db.Char(20) // automatic get unit price from last po
  currency_id         String        @db.Char(3)
  effective_date      DateTime?     @db.DateTime
  expired_date        DateTime?     @db.DateTime
  remarks             String?       @db.Text
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products      @relation(fields: [product_id], references: [id])
  currency            Currency      @relation(fields: [currency_id], references: [id])
  @@index([product_id])

}

model ProductImages {
  id                  String        @id @default(uuid())
  product_id          String        @db.Char(20)
  imageURL            String         @db.VarChar(250)
  isPrimary           Boolean?      @default(false)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products      @relation(fields: [product_id], references: [id])
  @@index([product_id])
}

model ProductUnitPriceHistory {
  id                  Int           @id @default(autoincrement())
  product_id          String        @db.Char(20)
  unitPrice           Decimal?      @default(0) @db.Decimal(18, 2)
  lastPo_id           String        @db.Char(20)
  currency_id         String        @db.Char(3)
  effective_date      DateTime?     @db.DateTime
  expired_date        DateTime?     @db.DateTime
  remarks             String?       @db.Text
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products      @relation(fields: [product_id], references: [id])
  currency            Currency      @relation(fields: [currency_id], references: [id])
  @@index([product_id])
}


model ProductSellingPriceHistory {
  id                  Int           @id @default(autoincrement())
  product_id          String        @db.Char(20)
  unitPrice           Decimal?      @default(0) @db.Decimal(18, 2)
  lastInvoice_id      String        @db.Char(20)
  currency_id         String        @db.Char(3)
  effective_date      DateTime?     @db.DateTime
  expired_date        DateTime?     @db.DateTime
  remarks             String?       @db.Text
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products      @relation(fields: [product_id], references: [id])
  currency            Currency      @relation(fields: [currency_id], references: [id])
  @@index([product_id])
}

model ProductSpecs {
  id                  String        @id @db.Char(20)
  catalog_id          String?       @db.VarChar(20)
  itemFunctions       String?       @default("") @db.VarChar(250)
  item_type           String?       @default("") @db.VarChar(100)
  item_model          String?       @default("") @db.VarChar(100)
  expired_at          DateTime?     @db.DateTime
  construction        String?
  mattress            String?       @default("") @db.VarChar(250)
  mattressSize        String?       @default("") @db.VarChar(250)
  mattressThickness   String?       @default("") @db.VarChar(250)
  finishing           String?       @default("") @db.VarChar(250)
  dimension           String?       @default("") @db.VarChar(250)
  powerSupply         String?       @default("") @db.VarChar(150)
  loadCapacity        String?       @default("") @db.VarChar(150)
  systemFilter        String?       @default("") @db.VarChar(180)
  accessories         String?       @default("") @db.VarChar(250)
  sideRail            String?       @default("") @db.VarChar(180)
  ivStand             String?       @default("") @db.VarChar(180)
  wheels              String?       @default("") @db.VarChar(150)
  maxLoad             String?       @default("") @db.VarChar(150)
  size                String?       @default("") @db.VarChar(150)
  weight              String?       @default("") @db.VarChar(150)
  standSize           String?       @default("") @db.VarChar(150)
  position            String?       @default("") @db.VarChar(150)
  base                String?       @default("") @db.VarChar(150)
  basePlate           String?       @default("") @db.VarChar(180)
  cover               String?       @default("") @db.VarChar(150)
  material            String?       @default("") @db.VarChar(150)
  coverMaterial       String?       @default("") @db.VarChar(150)
  typeScreen          String?       @default("") @db.VarChar(150)
  powerConsumption    String?       @default("") @db.VarChar(150)
  lamp                String?       @default("") @db.VarChar(150)
  movers              String?       @default("") @db.VarChar(200)
  rim                 String?       @default("") @db.VarChar(200)
  custodyFeet         String?       @default("") @db.VarChar(200)
  foot                String?       @default("") @db.VarChar(200)
  footWear            String?       @default("") @db.VarChar(200)
  pole                String?       @default("") @db.VarChar(200)
  inputVoltage        String?       @default("") @db.VarChar(150)
  outputVoltage       String?       @default("") @db.VarChar(150)
  sideGuard           String?       @default("") @db.VarChar(250)
  footandheadPanel    String?       @default("") @db.VarChar(250)
  temperatureControl  String?       @default("") @db.VarChar(250)
  top                 String?       @default("") @db.VarChar(150)
  foodTray            String?       @default("") @db.VarChar(250)
  traycorpse          String?       @default("") @db.VarChar(250)
  pillowthecorpse     String?       @default("") @db.VarChar(250)
  lightPole           String?       @default("") @db.VarChar(250)
  sterilizing         String?       @default("") @db.VarChar(250)
  filter              String?       @default("") @db.VarChar(250)
  bodyFrame           String?       @default("") @db.VarChar(250)
  underPressure       String?       @default("") @db.VarChar(250)
  foundationTray      String?       @default("") @db.VarChar(250)
  door                String?       @default("") @db.VarChar(250)
  handle              String?       @default("") @db.VarChar(250)
  medicineBox         String?       @default("") @db.VarChar(250)
  handleTrolley       String?       @default("") @db.VarChar(250)
  drawer              String?       @default("") @db.VarChar(250)
  systemControl       String?       @default("") @db.VarChar(250)
  bodyFrameWork       String?       @default("") @db.VarChar(250)
  remarks             String        @db.Text
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  products            Products      @relation(fields: [id], references: [id])
}

model sysCarousel {
  id                  Int           @id @default(autoincrement())
  section             Int           @db.TinyInt
  title               String?       @db.VarChar(150)
  description         String?       @db.VarChar(250)
  imageURL            String?       @db.VarChar(250)
  isShowSlide         Boolean?      @default(true)
  isShowBtn           Boolean?      @default(true)
  btnText             String?       @db.VarChar(50)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
}

model Suppliers {
  supplier_type       String?       @db.VarChar(25)
  href                String?       @db.VarChar(150)
  id                  String        @id @db.Char(20)
  supplier_cd         String        @db.Char(30)
  name                String?       @db.VarChar(150)
  address             String?       @db.VarChar(250)
  post_cd             String?       @db.VarChar(10)
  tel_no              String?       @db.VarChar(50)
  fax_no              String?       @db.VarChar(50)
  email               String?       @db.VarChar(50)
  contact_person      String?       @db.VarChar(50)
  primary_mobileNo    String?       @db.VarChar(50)
  secondary_mobileNo  String?       @db.VarChar(50)
  credit_term         Int?          @db.TinyInt
  currency_cd         String?       @db.Char(3)
  remarks             String?       @db.VarChar(250)
  iStatus             Boolean?      @default(true)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  poHeader            PoHeader[]
  status              MasterTableStatus? @relation(fields: [iStatus], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model PoHeader {
  id                  String        @id @db.Char(20)
  ref_no              String?       @db.VarChar(20)
  supplier_id         String        @db.Char(20)
  currency_cd         String?       @db.Char(3)
  tax_cd              String?       @db.Char(3)
  tax_rate            Decimal?      @db.Decimal(5, 2)
  po_date             DateTime?     @db.DateTime
  credit_terms        Int?          @db.TinyInt
  base_amt            Decimal?      @db.Decimal(18, 2)
  disc_amt            Decimal?      @db.Decimal(18, 2)
  tax_amt             Decimal?      @db.Decimal(18, 2)
  trx_amt             Decimal?      @db.Decimal(18, 2)
  remarks             String?       @db.VarChar(250)
  iStatus             Int?          @default(0) @db.TinyInt
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  poDetail            PoDetail[]
  status              TrxTableStatus? @relation(fields: [iStatus], references: [id], onDelete: NoAction, onUpdate: NoAction)
  suppliers           Suppliers       @relation(fields: [supplier_id], references: [id])
}

model PoDetail {
  id                  String        @id @db.Char(20)
  po_id               String        @db.Char(20)
  product_id          String        @db.Char(20)
  qty                 Decimal?      @default(0) @db.Decimal(18, 2)
  uom_id              String        @db.Char(10)
  unit_price          Decimal?      @default(0) @db.Decimal(18, 2)
  disc_pctg           Decimal?      @default(0) @db.Decimal(5, 2)
  disc_amt            Decimal?      @db.Decimal(18, 2)
  tax_pctg            Decimal?      @default(0) @db.Decimal(5, 2)
  tax_amt             Decimal?      @default(0) @db.Decimal(18, 2)
  trx_amt             Decimal?      @default(0) @db.Decimal(18, 2)        
  remarks             String?       @db.VarChar(250)
  createdBy           String?       @db.Char(10)
  createdAt           DateTime?     @db.DateTime @default(now())
  updatedBy           String?       @db.Char(10)
  updatedAt           DateTime?     @db.DateTime
  company_id          String        @db.Char(5)
  branch_id           String        @db.Char(10)
  poHeader            PoHeader  @relation(fields: [po_id], references: [id])
  uom                 Uoms      @relation(fields: [uom_id], references: [id], onUpdate: NoAction)
}


 model vProductCategories {
   id                  String        @id @db.VarChar(10)
   name                String        @db.VarChar(50)
 }

 model vMaterialCategories {
   id                  String        @id @db.VarChar(10)
   name                String        @db.VarChar(50)
 }


